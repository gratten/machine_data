> implement sub html for machine and kit postings on home page
> implement bootstrap
> delete/edit functionality
> create a 'machine page', similar to the user page in microblog tutorial
	displays all machine data, including all related kits
> home page has <title> in the tab??
> explore options for importing existing data (spreadsheets)
> pagination
> what will multiple machine support look like?
    hard coded list of existing machines
    logic to build serial numbers
> search functionality
> deployment
    interface with IT
    deploy to intranet?
    deploy to cloud based server?
> can be treated as a template to begin every job/field kit
    can incorporate the CDR process
    can query the agile database to generate template BOMs, which can then be imported into Agile
        part number generation? maybe the tool can be assigned its own block of SAP numbers?
        leads to cleaner and more uniform data flowing into Agile
> field in kit table with boolean to indicate if the kit is original to the machine, or field kit?
> 'add kit' button on specific machine page, auto-populates customer and project in kit table
> can you import a kit with a serial numer that doesn't yet exist? is this a problem if you can?

known bugs
> the bit in forms.py to generate serial number list has to be commented out to migrate a new column to the machine table
    likely something to do with machines.query.all() command
> issue with serial number dropdown box on add kit page
	list of choices does not update when new machine is added, requires server reset to update
l
Benefits of web app over traditional method (spreadsheet log)
> cleaner, simpler to update
> able to introduce logic to manage/restrict user input, resulting in cleaner and more uniform data
> database advantages
    can be tied to/feed/logically operate with other databases (agile, dbworks, etc)
> central repository of data
    logins can be implemented, allowing read only access to the entire site

steps for importing data into database:
> create .csv file and place in /external folder
> flask shell
> from external import data
> data.import_machines('<name of csv file here>')
> that's it, easy peasy